Terminals which are not used

   RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FuncAndDeclarations

    2 FuncAndDeclarations: FuncAndDeclarations FuncDefinition
    3                    | FuncAndDeclarations FuncDeclaration
    4                    | FuncAndDeclarations Declaration
    5                    | FuncDefinition
    6                    | FuncDeclaration
    7                    | Declaration

    8 Type: CHAR
    9     | INT
   10     | DOUBLE
   11     | VOID
   12     | SHORT

   13 FuncDefinition: Type FuncDeclarator FuncBody

   14 FuncBody: LBRACE DeclarationsAndStats RBRACE
   15         | LBRACE RBRACE

   16 DeclarationsAndStats: DeclarationsAndStats Declaration
   17                     | DeclarationsAndStats Stat
   18                     | Declaration
   19                     | Stat

   20 FuncDeclaration: Type FuncDeclarator SEMI

   21 FuncDeclarator: IDENTIFIER LPAR ParamList RPAR

   22 ParamList: ParamList COMMA ParamDeclaration
   23          | ParamDeclaration

   24 ParamDeclaration: Type IDENTIFIER
   25                 | Type

   26 Declaration: Type DeclaratorList SEMI
   27            | error SEMI

   28 DeclaratorList: DeclaratorList COMMA Declarator
   29               | Declarator

   30 Declarator: IDENTIFIER
   31           | IDENTIFIER ASSIGN ExprList

   32 StatList: StatList StatError
   33         | StatError

   34 StatError: Stat
   35          | error SEMI

   36 Stat: ExprList SEMI
   37     | LBRACE StatList RBRACE
   38     | IF LPAR ExprList RPAR Stat
   39     | IF LPAR ExprList RPAR Stat ELSE Stat
   40     | WHILE LPAR ExprList RPAR Stat
   41     | RETURN ExprList SEMI
   42     | RETURN SEMI
   43     | SEMI
   44     | LBRACE error RBRACE

   45 ExprList: ExprList COMMA Expr
   46         | Expr

   47 ExprCall: ExprCall COMMA Expr
   48         | Expr

   49 Expr: Expr OR Expr
   50     | Expr AND Expr
   51     | Expr BITWISEOR Expr
   52     | Expr BITWISEXOR Expr
   53     | Expr BITWISEAND Expr
   54     | Expr EQ Expr
   55     | Expr NE Expr
   56     | Expr GT Expr
   57     | Expr GE Expr
   58     | Expr LT Expr
   59     | Expr LE Expr
   60     | Expr ASSIGN Expr
   61     | Expr PLUS Expr
   62     | Expr MINUS Expr
   63     | Expr MUL Expr
   64     | Expr DIV Expr
   65     | Expr MOD Expr
   66     | MINUS Expr
   67     | PLUS Expr
   68     | NOT Expr
   69     | IDENTIFIER LPAR ExprCall RPAR
   70     | LPAR ExprList RPAR
   71     | IDENTIFIER
   72     | CHRLIT
   73     | DECIMAL
   74     | NATURAL
   75     | IDENTIFIER LPAR error RPAR
   76     | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 27 35 44 75 76
LBRACE (258) 14 15 37 44
RBRACE (259) 14 15 37 44
LPAR (260) 21 38 39 40 69 70 75 76
RPAR (261) 21 38 39 40 69 70 75 76
SEMI (262) 20 26 27 35 36 41 42 43
CHAR (263) 8
INT (264) 9
DOUBLE (265) 10
VOID (266) 11
SHORT (267) 12
ASSIGN (268) 31 60
COMMA (269) 22 28 45 47
PLUS (270) 61 67
MINUS (271) 62 66
MUL (272) 63
DIV (273) 64
MOD (274) 65
EQ (275) 54
NE (276) 55
GT (277) 56
GE (278) 57
LT (279) 58
LE (280) 59
AND (281) 50
OR (282) 49
BITWISEAND (283) 53
BITWISEOR (284) 51
BITWISEXOR (285) 52
NOT (286) 68
IF (287) 38 39
ELSE (288) 39
WHILE (289) 40
RETURN (290) 41 42
RESERVED (291)
IDENTIFIER (292) 21 24 30 31 69 71 75
CHRLIT (293) 72
DECIMAL (294) 73
NATURAL (295) 74
LOW (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Program (43)
    on left: 1, on right: 0
FuncAndDeclarations (44)
    on left: 2 3 4 5 6 7, on right: 1 2 3 4
Type (45)
    on left: 8 9 10 11 12, on right: 13 20 24 25 26
FuncDefinition (46)
    on left: 13, on right: 2 5
FuncBody (47)
    on left: 14 15, on right: 13
DeclarationsAndStats (48)
    on left: 16 17 18 19, on right: 14 16 17
FuncDeclaration (49)
    on left: 20, on right: 3 6
FuncDeclarator (50)
    on left: 21, on right: 13 20
ParamList (51)
    on left: 22 23, on right: 21 22
ParamDeclaration (52)
    on left: 24 25, on right: 22 23
Declaration (53)
    on left: 26 27, on right: 4 7 16 18
DeclaratorList (54)
    on left: 28 29, on right: 26 28
Declarator (55)
    on left: 30 31, on right: 28 29
StatList (56)
    on left: 32 33, on right: 32 37
StatError (57)
    on left: 34 35, on right: 32 33
Stat (58)
    on left: 36 37 38 39 40 41 42 43 44, on right: 17 19 34 38 39 40
ExprList (59)
    on left: 45 46, on right: 31 36 38 39 40 41 45 70
ExprCall (60)
    on left: 47 48, on right: 47 69
Expr (61)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75 76, on right: 45 46 47 48 49 50 51 52
    53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68


state 0

    0 $accept: . Program $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    SHORT   shift, and go to state 6

    Program              go to state 7
    FuncAndDeclarations  go to state 8
    Type                 go to state 9
    FuncDefinition       go to state 10
    FuncDeclaration      go to state 11
    Declaration          go to state 12


state 1

   27 Declaration: error . SEMI

    SEMI  shift, and go to state 13


state 2

    8 Type: CHAR .

    $default  reduce using rule 8 (Type)


state 3

    9 Type: INT .

    $default  reduce using rule 9 (Type)


state 4

   10 Type: DOUBLE .

    $default  reduce using rule 10 (Type)


state 5

   11 Type: VOID .

    $default  reduce using rule 11 (Type)


state 6

   12 Type: SHORT .

    $default  reduce using rule 12 (Type)


state 7

    0 $accept: Program . $end

    $end  shift, and go to state 14


state 8

    1 Program: FuncAndDeclarations .
    2 FuncAndDeclarations: FuncAndDeclarations . FuncDefinition
    3                    | FuncAndDeclarations . FuncDeclaration
    4                    | FuncAndDeclarations . Declaration

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    SHORT   shift, and go to state 6

    $end  reduce using rule 1 (Program)

    Type             go to state 9
    FuncDefinition   go to state 15
    FuncDeclaration  go to state 16
    Declaration      go to state 17


state 9

   13 FuncDefinition: Type . FuncDeclarator FuncBody
   20 FuncDeclaration: Type . FuncDeclarator SEMI
   26 Declaration: Type . DeclaratorList SEMI

    IDENTIFIER  shift, and go to state 18

    FuncDeclarator  go to state 19
    DeclaratorList  go to state 20
    Declarator      go to state 21


state 10

    5 FuncAndDeclarations: FuncDefinition .

    $default  reduce using rule 5 (FuncAndDeclarations)


state 11

    6 FuncAndDeclarations: FuncDeclaration .

    $default  reduce using rule 6 (FuncAndDeclarations)


state 12

    7 FuncAndDeclarations: Declaration .

    $default  reduce using rule 7 (FuncAndDeclarations)


state 13

   27 Declaration: error SEMI .

    $default  reduce using rule 27 (Declaration)


state 14

    0 $accept: Program $end .

    $default  accept


state 15

    2 FuncAndDeclarations: FuncAndDeclarations FuncDefinition .

    $default  reduce using rule 2 (FuncAndDeclarations)


state 16

    3 FuncAndDeclarations: FuncAndDeclarations FuncDeclaration .

    $default  reduce using rule 3 (FuncAndDeclarations)


state 17

    4 FuncAndDeclarations: FuncAndDeclarations Declaration .

    $default  reduce using rule 4 (FuncAndDeclarations)


state 18

   21 FuncDeclarator: IDENTIFIER . LPAR ParamList RPAR
   30 Declarator: IDENTIFIER .
   31           | IDENTIFIER . ASSIGN ExprList

    LPAR    shift, and go to state 22
    ASSIGN  shift, and go to state 23

    $default  reduce using rule 30 (Declarator)


state 19

   13 FuncDefinition: Type FuncDeclarator . FuncBody
   20 FuncDeclaration: Type FuncDeclarator . SEMI

    LBRACE  shift, and go to state 24
    SEMI    shift, and go to state 25

    FuncBody  go to state 26


state 20

   26 Declaration: Type DeclaratorList . SEMI
   28 DeclaratorList: DeclaratorList . COMMA Declarator

    SEMI   shift, and go to state 27
    COMMA  shift, and go to state 28


state 21

   29 DeclaratorList: Declarator .

    $default  reduce using rule 29 (DeclaratorList)


state 22

   21 FuncDeclarator: IDENTIFIER LPAR . ParamList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    SHORT   shift, and go to state 6

    Type              go to state 29
    ParamList         go to state 30
    ParamDeclaration  go to state 31


state 23

   31 Declarator: IDENTIFIER ASSIGN . ExprList

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    ExprList  go to state 40
    Expr      go to state 41


state 24

   14 FuncBody: LBRACE . DeclarationsAndStats RBRACE
   15         | LBRACE . RBRACE

    error       shift, and go to state 1
    LBRACE      shift, and go to state 42
    RBRACE      shift, and go to state 43
    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 44
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VOID        shift, and go to state 5
    SHORT       shift, and go to state 6
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IF          shift, and go to state 45
    WHILE       shift, and go to state 46
    RETURN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Type                  go to state 48
    DeclarationsAndStats  go to state 49
    Declaration           go to state 50
    Stat                  go to state 51
    ExprList              go to state 52
    Expr                  go to state 41


state 25

   20 FuncDeclaration: Type FuncDeclarator SEMI .

    $default  reduce using rule 20 (FuncDeclaration)


state 26

   13 FuncDefinition: Type FuncDeclarator FuncBody .

    $default  reduce using rule 13 (FuncDefinition)


state 27

   26 Declaration: Type DeclaratorList SEMI .

    $default  reduce using rule 26 (Declaration)


state 28

   28 DeclaratorList: DeclaratorList COMMA . Declarator

    IDENTIFIER  shift, and go to state 53

    Declarator  go to state 54


state 29

   24 ParamDeclaration: Type . IDENTIFIER
   25                 | Type .

    IDENTIFIER  shift, and go to state 55

    $default  reduce using rule 25 (ParamDeclaration)


state 30

   21 FuncDeclarator: IDENTIFIER LPAR ParamList . RPAR
   22 ParamList: ParamList . COMMA ParamDeclaration

    RPAR   shift, and go to state 56
    COMMA  shift, and go to state 57


state 31

   23 ParamList: ParamDeclaration .

    $default  reduce using rule 23 (ParamList)


state 32

   70 Expr: LPAR . ExprList RPAR
   76     | LPAR . error RPAR

    error       shift, and go to state 58
    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    ExprList  go to state 59
    Expr      go to state 41


state 33

   67 Expr: PLUS . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 60


state 34

   66 Expr: MINUS . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 61


state 35

   68 Expr: NOT . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 62


state 36

   69 Expr: IDENTIFIER . LPAR ExprCall RPAR
   71     | IDENTIFIER .
   75     | IDENTIFIER . LPAR error RPAR

    LPAR  shift, and go to state 63

    $default  reduce using rule 71 (Expr)


state 37

   72 Expr: CHRLIT .

    $default  reduce using rule 72 (Expr)


state 38

   73 Expr: DECIMAL .

    $default  reduce using rule 73 (Expr)


state 39

   74 Expr: NATURAL .

    $default  reduce using rule 74 (Expr)


state 40

   31 Declarator: IDENTIFIER ASSIGN ExprList .
   45 ExprList: ExprList . COMMA Expr

    $default  reduce using rule 31 (Declarator)


state 41

   46 ExprList: Expr .
   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    ASSIGN      shift, and go to state 65
    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78
    BITWISEAND  shift, and go to state 79
    BITWISEOR   shift, and go to state 80
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 46 (ExprList)


state 42

   37 Stat: LBRACE . StatList RBRACE
   44     | LBRACE . error RBRACE

    error       shift, and go to state 82
    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 44
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IF          shift, and go to state 45
    WHILE       shift, and go to state 46
    RETURN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    StatList   go to state 83
    StatError  go to state 84
    Stat       go to state 85
    ExprList   go to state 52
    Expr       go to state 41


state 43

   15 FuncBody: LBRACE RBRACE .

    $default  reduce using rule 15 (FuncBody)


state 44

   43 Stat: SEMI .

    $default  reduce using rule 43 (Stat)


state 45

   38 Stat: IF . LPAR ExprList RPAR Stat
   39     | IF . LPAR ExprList RPAR Stat ELSE Stat

    LPAR  shift, and go to state 86


state 46

   40 Stat: WHILE . LPAR ExprList RPAR Stat

    LPAR  shift, and go to state 87


state 47

   41 Stat: RETURN . ExprList SEMI
   42     | RETURN . SEMI

    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 88
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    ExprList  go to state 89
    Expr      go to state 41


state 48

   26 Declaration: Type . DeclaratorList SEMI

    IDENTIFIER  shift, and go to state 53

    DeclaratorList  go to state 20
    Declarator      go to state 21


state 49

   14 FuncBody: LBRACE DeclarationsAndStats . RBRACE
   16 DeclarationsAndStats: DeclarationsAndStats . Declaration
   17                     | DeclarationsAndStats . Stat

    error       shift, and go to state 1
    LBRACE      shift, and go to state 42
    RBRACE      shift, and go to state 90
    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 44
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    DOUBLE      shift, and go to state 4
    VOID        shift, and go to state 5
    SHORT       shift, and go to state 6
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IF          shift, and go to state 45
    WHILE       shift, and go to state 46
    RETURN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Type         go to state 48
    Declaration  go to state 91
    Stat         go to state 92
    ExprList     go to state 52
    Expr         go to state 41


state 50

   18 DeclarationsAndStats: Declaration .

    $default  reduce using rule 18 (DeclarationsAndStats)


state 51

   19 DeclarationsAndStats: Stat .

    $default  reduce using rule 19 (DeclarationsAndStats)


state 52

   36 Stat: ExprList . SEMI
   45 ExprList: ExprList . COMMA Expr

    SEMI   shift, and go to state 93
    COMMA  shift, and go to state 64


state 53

   30 Declarator: IDENTIFIER .
   31           | IDENTIFIER . ASSIGN ExprList

    ASSIGN  shift, and go to state 23

    $default  reduce using rule 30 (Declarator)


state 54

   28 DeclaratorList: DeclaratorList COMMA Declarator .

    $default  reduce using rule 28 (DeclaratorList)


state 55

   24 ParamDeclaration: Type IDENTIFIER .

    $default  reduce using rule 24 (ParamDeclaration)


state 56

   21 FuncDeclarator: IDENTIFIER LPAR ParamList RPAR .

    $default  reduce using rule 21 (FuncDeclarator)


state 57

   22 ParamList: ParamList COMMA . ParamDeclaration

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    DOUBLE  shift, and go to state 4
    VOID    shift, and go to state 5
    SHORT   shift, and go to state 6

    Type              go to state 29
    ParamDeclaration  go to state 94


state 58

   76 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 95


state 59

   45 ExprList: ExprList . COMMA Expr
   70 Expr: LPAR ExprList . RPAR

    RPAR   shift, and go to state 96
    COMMA  shift, and go to state 64


state 60

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   67     | PLUS Expr .

    $default  reduce using rule 67 (Expr)


state 61

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   66     | MINUS Expr .

    $default  reduce using rule 66 (Expr)


state 62

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   68     | NOT Expr .

    $default  reduce using rule 68 (Expr)


state 63

   69 Expr: IDENTIFIER LPAR . ExprCall RPAR
   75     | IDENTIFIER LPAR . error RPAR

    error       shift, and go to state 97
    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    ExprCall  go to state 98
    Expr      go to state 99


state 64

   45 ExprList: ExprList COMMA . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 100


state 65

   60 Expr: Expr ASSIGN . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 101


state 66

   61 Expr: Expr PLUS . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 102


state 67

   62 Expr: Expr MINUS . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 103


state 68

   63 Expr: Expr MUL . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 104


state 69

   64 Expr: Expr DIV . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 105


state 70

   65 Expr: Expr MOD . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 106


state 71

   54 Expr: Expr EQ . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 107


state 72

   55 Expr: Expr NE . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 108


state 73

   56 Expr: Expr GT . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 109


state 74

   57 Expr: Expr GE . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 110


state 75

   58 Expr: Expr LT . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 111


state 76

   59 Expr: Expr LE . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 112


state 77

   50 Expr: Expr AND . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 113


state 78

   49 Expr: Expr OR . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 114


state 79

   53 Expr: Expr BITWISEAND . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 115


state 80

   51 Expr: Expr BITWISEOR . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 116


state 81

   52 Expr: Expr BITWISEXOR . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 117


state 82

   35 StatError: error . SEMI
   44 Stat: LBRACE error . RBRACE

    RBRACE  shift, and go to state 118
    SEMI    shift, and go to state 119


state 83

   32 StatList: StatList . StatError
   37 Stat: LBRACE StatList . RBRACE

    error       shift, and go to state 120
    LBRACE      shift, and go to state 42
    RBRACE      shift, and go to state 121
    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 44
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IF          shift, and go to state 45
    WHILE       shift, and go to state 46
    RETURN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    StatError  go to state 122
    Stat       go to state 85
    ExprList   go to state 52
    Expr       go to state 41


state 84

   33 StatList: StatError .

    $default  reduce using rule 33 (StatList)


state 85

   34 StatError: Stat .

    $default  reduce using rule 34 (StatError)


state 86

   38 Stat: IF LPAR . ExprList RPAR Stat
   39     | IF LPAR . ExprList RPAR Stat ELSE Stat

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    ExprList  go to state 123
    Expr      go to state 41


state 87

   40 Stat: WHILE LPAR . ExprList RPAR Stat

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    ExprList  go to state 124
    Expr      go to state 41


state 88

   42 Stat: RETURN SEMI .

    $default  reduce using rule 42 (Stat)


state 89

   41 Stat: RETURN ExprList . SEMI
   45 ExprList: ExprList . COMMA Expr

    SEMI   shift, and go to state 125
    COMMA  shift, and go to state 64


state 90

   14 FuncBody: LBRACE DeclarationsAndStats RBRACE .

    $default  reduce using rule 14 (FuncBody)


state 91

   16 DeclarationsAndStats: DeclarationsAndStats Declaration .

    $default  reduce using rule 16 (DeclarationsAndStats)


state 92

   17 DeclarationsAndStats: DeclarationsAndStats Stat .

    $default  reduce using rule 17 (DeclarationsAndStats)


state 93

   36 Stat: ExprList SEMI .

    $default  reduce using rule 36 (Stat)


state 94

   22 ParamList: ParamList COMMA ParamDeclaration .

    $default  reduce using rule 22 (ParamList)


state 95

   76 Expr: LPAR error RPAR .

    $default  reduce using rule 76 (Expr)


state 96

   70 Expr: LPAR ExprList RPAR .

    $default  reduce using rule 70 (Expr)


state 97

   75 Expr: IDENTIFIER LPAR error . RPAR

    RPAR  shift, and go to state 126


state 98

   47 ExprCall: ExprCall . COMMA Expr
   69 Expr: IDENTIFIER LPAR ExprCall . RPAR

    RPAR   shift, and go to state 127
    COMMA  shift, and go to state 128


state 99

   48 ExprCall: Expr .
   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    ASSIGN      shift, and go to state 65
    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78
    BITWISEAND  shift, and go to state 79
    BITWISEOR   shift, and go to state 80
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 48 (ExprCall)


state 100

   45 ExprList: ExprList COMMA Expr .
   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    ASSIGN      shift, and go to state 65
    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78
    BITWISEAND  shift, and go to state 79
    BITWISEOR   shift, and go to state 80
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 45 (ExprList)


state 101

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   60     | Expr ASSIGN Expr .
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    ASSIGN      shift, and go to state 65
    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78
    BITWISEAND  shift, and go to state 79
    BITWISEOR   shift, and go to state 80
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 60 (Expr)


state 102

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   61     | Expr PLUS Expr .
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    MUL  shift, and go to state 68
    DIV  shift, and go to state 69
    MOD  shift, and go to state 70

    $default  reduce using rule 61 (Expr)


state 103

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   62     | Expr MINUS Expr .
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    MUL  shift, and go to state 68
    DIV  shift, and go to state 69
    MOD  shift, and go to state 70

    $default  reduce using rule 62 (Expr)


state 104

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   63     | Expr MUL Expr .
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    $default  reduce using rule 63 (Expr)


state 105

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   64     | Expr DIV Expr .
   65     | Expr . MOD Expr

    $default  reduce using rule 64 (Expr)


state 106

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr
   65     | Expr MOD Expr .

    $default  reduce using rule 65 (Expr)


state 107

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   54     | Expr EQ Expr .
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 54 (Expr)


state 108

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   55     | Expr NE Expr .
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 55 (Expr)


state 109

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   56     | Expr GT Expr .
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 56 (Expr)


state 110

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   57     | Expr GE Expr .
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 57 (Expr)


state 111

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   58     | Expr LT Expr .
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 58 (Expr)


state 112

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   59     | Expr LE Expr .
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70

    $default  reduce using rule 59 (Expr)


state 113

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   50     | Expr AND Expr .
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    BITWISEAND  shift, and go to state 79
    BITWISEOR   shift, and go to state 80
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 50 (Expr)


state 114

   49 Expr: Expr . OR Expr
   49     | Expr OR Expr .
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    AND         shift, and go to state 77
    BITWISEAND  shift, and go to state 79
    BITWISEOR   shift, and go to state 80
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 49 (Expr)


state 115

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   53     | Expr BITWISEAND Expr .
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS   shift, and go to state 66
    MINUS  shift, and go to state 67
    MUL    shift, and go to state 68
    DIV    shift, and go to state 69
    MOD    shift, and go to state 70
    EQ     shift, and go to state 71
    NE     shift, and go to state 72
    GT     shift, and go to state 73
    GE     shift, and go to state 74
    LT     shift, and go to state 75
    LE     shift, and go to state 76

    $default  reduce using rule 53 (Expr)


state 116

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   51     | Expr BITWISEOR Expr .
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    BITWISEAND  shift, and go to state 79
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 51 (Expr)


state 117

   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   52     | Expr BITWISEXOR Expr .
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    BITWISEAND  shift, and go to state 79

    $default  reduce using rule 52 (Expr)


state 118

   44 Stat: LBRACE error RBRACE .

    $default  reduce using rule 44 (Stat)


state 119

   35 StatError: error SEMI .

    $default  reduce using rule 35 (StatError)


state 120

   35 StatError: error . SEMI

    SEMI  shift, and go to state 119


state 121

   37 Stat: LBRACE StatList RBRACE .

    $default  reduce using rule 37 (Stat)


state 122

   32 StatList: StatList StatError .

    $default  reduce using rule 32 (StatList)


state 123

   38 Stat: IF LPAR ExprList . RPAR Stat
   39     | IF LPAR ExprList . RPAR Stat ELSE Stat
   45 ExprList: ExprList . COMMA Expr

    RPAR   shift, and go to state 129
    COMMA  shift, and go to state 64


state 124

   40 Stat: WHILE LPAR ExprList . RPAR Stat
   45 ExprList: ExprList . COMMA Expr

    RPAR   shift, and go to state 130
    COMMA  shift, and go to state 64


state 125

   41 Stat: RETURN ExprList SEMI .

    $default  reduce using rule 41 (Stat)


state 126

   75 Expr: IDENTIFIER LPAR error RPAR .

    $default  reduce using rule 75 (Expr)


state 127

   69 Expr: IDENTIFIER LPAR ExprCall RPAR .

    $default  reduce using rule 69 (Expr)


state 128

   47 ExprCall: ExprCall COMMA . Expr

    LPAR        shift, and go to state 32
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Expr  go to state 131


state 129

   38 Stat: IF LPAR ExprList RPAR . Stat
   39     | IF LPAR ExprList RPAR . Stat ELSE Stat

    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 44
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IF          shift, and go to state 45
    WHILE       shift, and go to state 46
    RETURN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Stat      go to state 132
    ExprList  go to state 52
    Expr      go to state 41


state 130

   40 Stat: WHILE LPAR ExprList RPAR . Stat

    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 44
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IF          shift, and go to state 45
    WHILE       shift, and go to state 46
    RETURN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Stat      go to state 133
    ExprList  go to state 52
    Expr      go to state 41


state 131

   47 ExprCall: ExprCall COMMA Expr .
   49 Expr: Expr . OR Expr
   50     | Expr . AND Expr
   51     | Expr . BITWISEOR Expr
   52     | Expr . BITWISEXOR Expr
   53     | Expr . BITWISEAND Expr
   54     | Expr . EQ Expr
   55     | Expr . NE Expr
   56     | Expr . GT Expr
   57     | Expr . GE Expr
   58     | Expr . LT Expr
   59     | Expr . LE Expr
   60     | Expr . ASSIGN Expr
   61     | Expr . PLUS Expr
   62     | Expr . MINUS Expr
   63     | Expr . MUL Expr
   64     | Expr . DIV Expr
   65     | Expr . MOD Expr

    ASSIGN      shift, and go to state 65
    PLUS        shift, and go to state 66
    MINUS       shift, and go to state 67
    MUL         shift, and go to state 68
    DIV         shift, and go to state 69
    MOD         shift, and go to state 70
    EQ          shift, and go to state 71
    NE          shift, and go to state 72
    GT          shift, and go to state 73
    GE          shift, and go to state 74
    LT          shift, and go to state 75
    LE          shift, and go to state 76
    AND         shift, and go to state 77
    OR          shift, and go to state 78
    BITWISEAND  shift, and go to state 79
    BITWISEOR   shift, and go to state 80
    BITWISEXOR  shift, and go to state 81

    $default  reduce using rule 47 (ExprCall)


state 132

   38 Stat: IF LPAR ExprList RPAR Stat .
   39     | IF LPAR ExprList RPAR Stat . ELSE Stat

    ELSE  shift, and go to state 134

    $default  reduce using rule 38 (Stat)


state 133

   40 Stat: WHILE LPAR ExprList RPAR Stat .

    $default  reduce using rule 40 (Stat)


state 134

   39 Stat: IF LPAR ExprList RPAR Stat ELSE . Stat

    LBRACE      shift, and go to state 42
    LPAR        shift, and go to state 32
    SEMI        shift, and go to state 44
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    NOT         shift, and go to state 35
    IF          shift, and go to state 45
    WHILE       shift, and go to state 46
    RETURN      shift, and go to state 47
    IDENTIFIER  shift, and go to state 36
    CHRLIT      shift, and go to state 37
    DECIMAL     shift, and go to state 38
    NATURAL     shift, and go to state 39

    Stat      go to state 135
    ExprList  go to state 52
    Expr      go to state 41


state 135

   39 Stat: IF LPAR ExprList RPAR Stat ELSE Stat .

    $default  reduce using rule 39 (Stat)

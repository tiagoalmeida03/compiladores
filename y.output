Terminals which are not used

   CHAR
   IF
   ELSE
   WHILE
   INT
   SHORT
   DOUBLE
   RETURN
   VOID
   RESERVED
   LBRACE
   RBRACE
   SEMI
   LOW


Grammar

    0 $accept: Program $end

    1 Program: Expr

    2 ExprList: ExprList COMMA Expr
    3         | Expr

    4 ExprCall: ExprCall COMMA Expr
    5         | Expr

    6 Expr: Expr OR Expr
    7     | Expr AND Expr
    8     | Expr BITWISEOR Expr
    9     | Expr BITWISEXOR Expr
   10     | Expr BITWISEAND Expr
   11     | Expr EQ Expr
   12     | Expr NE Expr
   13     | Expr GT Expr
   14     | Expr GE Expr
   15     | Expr LT Expr
   16     | Expr LE Expr
   17     | Expr ASSIGN Expr
   18     | Expr MUL Expr
   19     | Expr MOD Expr
   20     | Expr DIV Expr
   21     | Expr PLUS Expr
   22     | Expr MINUS Expr
   23     | IDENTIFIER LPAR RPAR
   24     | MINUS Expr
   25     | PLUS Expr
   26     | NOT Expr
   27     | IDENTIFIER LPAR ExprCall RPAR
   28     | LPAR ExprList RPAR
   29     | IDENTIFIER
   30     | CHRLIT
   31     | DECIMAL
   32     | NATURAL
   33     | IDENTIFIER LPAR error RPAR
   34     | LPAR error RPAR


Terminals, with rules where they appear

$end (0) 0
error (256) 33 34
CHAR (258)
IF (259)
ELSE (260)
WHILE (261)
INT (262)
SHORT (263)
DOUBLE (264)
RETURN (265)
VOID (266)
RESERVED (267)
BITWISEAND (268) 10
BITWISEOR (269) 8
BITWISEXOR (270) 9
AND (271) 7
ASSIGN (272) 17
MUL (273) 18
COMMA (274) 2 4
DIV (275) 20
EQ (276) 11
GE (277) 14
GT (278) 13
LBRACE (279)
LE (280) 16
LPAR (281) 23 27 28 33 34
LT (282) 15
MINUS (283) 22 24
MOD (284) 19
NE (285) 12
NOT (286) 26
OR (287) 6
PLUS (288) 21 25
RBRACE (289)
RPAR (290) 23 27 28 33 34
SEMI (291)
IDENTIFIER (292) 23 27 29 33
CHRLIT (293) 30
DECIMAL (294) 31
NATURAL (295) 32
LOW (296)


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Program (43)
    on left: 1, on right: 0
ExprList (44)
    on left: 2 3, on right: 2 28
ExprCall (45)
    on left: 4 5, on right: 4 27
Expr (46)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34, on right: 1 2 3 4 5 6 7 8 9 10 11 12
    13 14 15 16 17 18 19 20 21 22 24 25 26


state 0

    0 $accept: . Program $end
    1 Program: . Expr
    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Program  go to state 9
    Expr     go to state 10


state 1

    2 ExprList: . ExprList COMMA Expr
    3         | . Expr
    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   28     | LPAR . ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR
   34     | LPAR . error RPAR

    error       shift, and go to state 11
    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    ExprList  go to state 12
    Expr      go to state 13


state 2

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   24     | MINUS . Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 14


state 3

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   26     | NOT . Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 15


state 4

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   25     | PLUS . Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 16


state 5

   23 Expr: IDENTIFIER . LPAR RPAR
   27     | IDENTIFIER . LPAR ExprCall RPAR
   29     | IDENTIFIER .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]
   33     | IDENTIFIER . LPAR error RPAR

    LPAR  shift, and go to state 17

    $default  reduce using rule 29 (Expr)


state 6

   30 Expr: CHRLIT .

    $default  reduce using rule 30 (Expr)


state 7

   31 Expr: DECIMAL .

    $default  reduce using rule 31 (Expr)


state 8

   32 Expr: NATURAL .

    $default  reduce using rule 32 (Expr)


state 9

    0 $accept: Program . $end

    $end  shift, and go to state 18


state 10

    1 Program: Expr .  [$end]
    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    AND         shift, and go to state 22
    ASSIGN      shift, and go to state 23
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    OR          shift, and go to state 34
    PLUS        shift, and go to state 35

    $default  reduce using rule 1 (Program)


state 11

   34 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 36


state 12

    2 ExprList: ExprList . COMMA Expr
   28 Expr: LPAR ExprList . RPAR

    COMMA  shift, and go to state 37
    RPAR   shift, and go to state 38


state 13

    3 ExprList: Expr .  [COMMA, RPAR]
    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    AND         shift, and go to state 22
    ASSIGN      shift, and go to state 23
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    OR          shift, and go to state 34
    PLUS        shift, and go to state 35

    $default  reduce using rule 3 (ExprList)


state 14

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr
   24     | MINUS Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]

    $default  reduce using rule 24 (Expr)

    Conflict between rule 24 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 24 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 24 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 24 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 24 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 24 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 24 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 24 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 24 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 24 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 24 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 24 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 24 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 24 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 24 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 24 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 24 and token PLUS resolved as reduce (PLUS < NOT).


state 15

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr
   26     | NOT Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]

    $default  reduce using rule 26 (Expr)

    Conflict between rule 26 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 26 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 26 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 26 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 26 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 26 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 26 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 26 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 26 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 26 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 26 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 26 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 26 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 26 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 26 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 26 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 26 and token PLUS resolved as reduce (PLUS < NOT).


state 16

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr
   25     | PLUS Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]

    $default  reduce using rule 25 (Expr)

    Conflict between rule 25 and token BITWISEAND resolved as reduce (BITWISEAND < NOT).
    Conflict between rule 25 and token BITWISEOR resolved as reduce (BITWISEOR < NOT).
    Conflict between rule 25 and token BITWISEXOR resolved as reduce (BITWISEXOR < NOT).
    Conflict between rule 25 and token AND resolved as reduce (AND < NOT).
    Conflict between rule 25 and token ASSIGN resolved as reduce (ASSIGN < NOT).
    Conflict between rule 25 and token MUL resolved as reduce (MUL < NOT).
    Conflict between rule 25 and token DIV resolved as reduce (DIV < NOT).
    Conflict between rule 25 and token EQ resolved as reduce (EQ < NOT).
    Conflict between rule 25 and token GE resolved as reduce (GE < NOT).
    Conflict between rule 25 and token GT resolved as reduce (GT < NOT).
    Conflict between rule 25 and token LE resolved as reduce (LE < NOT).
    Conflict between rule 25 and token LT resolved as reduce (LT < NOT).
    Conflict between rule 25 and token MINUS resolved as reduce (MINUS < NOT).
    Conflict between rule 25 and token MOD resolved as reduce (MOD < NOT).
    Conflict between rule 25 and token NE resolved as reduce (NE < NOT).
    Conflict between rule 25 and token OR resolved as reduce (OR < NOT).
    Conflict between rule 25 and token PLUS resolved as reduce (PLUS < NOT).


state 17

    4 ExprCall: . ExprCall COMMA Expr
    5         | . Expr
    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   23     | IDENTIFIER LPAR . RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   27     | IDENTIFIER LPAR . ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   33     | IDENTIFIER LPAR . error RPAR
   34     | . LPAR error RPAR

    error       shift, and go to state 39
    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    RPAR        shift, and go to state 40
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    ExprCall  go to state 41
    Expr      go to state 42


state 18

    0 $accept: Program $end .

    $default  accept


state 19

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   10     | Expr BITWISEAND . Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 43


state 20

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    8     | Expr BITWISEOR . Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 44


state 21

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
    9     | Expr BITWISEXOR . Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 45


state 22

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    7     | Expr AND . Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 46


state 23

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   17     | Expr ASSIGN . Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 47


state 24

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   18     | Expr MUL . Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 48


state 25

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   20     | Expr DIV . Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 49


state 26

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   11     | Expr EQ . Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 50


state 27

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   14     | Expr GE . Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 51


state 28

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   13     | Expr GT . Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 52


state 29

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   16     | Expr LE . Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 53


state 30

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   15     | Expr LT . Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 54


state 31

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   22     | Expr MINUS . Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 55


state 32

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   19     | Expr MOD . Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 56


state 33

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   12     | Expr NE . Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 57


state 34

    6 Expr: . Expr OR Expr
    6     | Expr OR . Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 58


state 35

    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   21     | Expr PLUS . Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 59


state 36

   34 Expr: LPAR error RPAR .

    $default  reduce using rule 34 (Expr)


state 37

    2 ExprList: ExprList COMMA . Expr
    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 60


state 38

   28 Expr: LPAR ExprList RPAR .

    $default  reduce using rule 28 (Expr)


state 39

   33 Expr: IDENTIFIER LPAR error . RPAR

    RPAR  shift, and go to state 61


state 40

   23 Expr: IDENTIFIER LPAR RPAR .

    $default  reduce using rule 23 (Expr)


state 41

    4 ExprCall: ExprCall . COMMA Expr
   27 Expr: IDENTIFIER LPAR ExprCall . RPAR

    COMMA  shift, and go to state 62
    RPAR   shift, and go to state 63


state 42

    5 ExprCall: Expr .  [COMMA, RPAR]
    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    AND         shift, and go to state 22
    ASSIGN      shift, and go to state 23
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    OR          shift, and go to state 34
    PLUS        shift, and go to state 35

    $default  reduce using rule 5 (ExprCall)


state 43

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR]
   10     | Expr BITWISEAND Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR]
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    MUL    shift, and go to state 24
    DIV    shift, and go to state 25
    EQ     shift, and go to state 26
    GE     shift, and go to state 27
    GT     shift, and go to state 28
    LE     shift, and go to state 29
    LT     shift, and go to state 30
    MINUS  shift, and go to state 31
    MOD    shift, and go to state 32
    NE     shift, and go to state 33
    PLUS   shift, and go to state 35

    $default  reduce using rule 10 (Expr)

    Conflict between rule 10 and token BITWISEAND resolved as reduce (%left BITWISEAND).
    Conflict between rule 10 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEAND).
    Conflict between rule 10 and token BITWISEXOR resolved as reduce (BITWISEXOR < BITWISEAND).
    Conflict between rule 10 and token AND resolved as reduce (AND < BITWISEAND).
    Conflict between rule 10 and token ASSIGN resolved as reduce (ASSIGN < BITWISEAND).
    Conflict between rule 10 and token MUL resolved as shift (BITWISEAND < MUL).
    Conflict between rule 10 and token DIV resolved as shift (BITWISEAND < DIV).
    Conflict between rule 10 and token EQ resolved as shift (BITWISEAND < EQ).
    Conflict between rule 10 and token GE resolved as shift (BITWISEAND < GE).
    Conflict between rule 10 and token GT resolved as shift (BITWISEAND < GT).
    Conflict between rule 10 and token LE resolved as shift (BITWISEAND < LE).
    Conflict between rule 10 and token LT resolved as shift (BITWISEAND < LT).
    Conflict between rule 10 and token MINUS resolved as shift (BITWISEAND < MINUS).
    Conflict between rule 10 and token MOD resolved as shift (BITWISEAND < MOD).
    Conflict between rule 10 and token NE resolved as shift (BITWISEAND < NE).
    Conflict between rule 10 and token OR resolved as reduce (OR < BITWISEAND).
    Conflict between rule 10 and token PLUS resolved as shift (BITWISEAND < PLUS).


state 44

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr  [$end, BITWISEOR, AND, ASSIGN, COMMA, OR, RPAR]
    8     | Expr BITWISEOR Expr .  [$end, BITWISEOR, AND, ASSIGN, COMMA, OR, RPAR]
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEXOR  shift, and go to state 21
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    PLUS        shift, and go to state 35

    $default  reduce using rule 8 (Expr)

    Conflict between rule 8 and token BITWISEAND resolved as shift (BITWISEOR < BITWISEAND).
    Conflict between rule 8 and token BITWISEOR resolved as reduce (%left BITWISEOR).
    Conflict between rule 8 and token BITWISEXOR resolved as shift (BITWISEOR < BITWISEXOR).
    Conflict between rule 8 and token AND resolved as reduce (AND < BITWISEOR).
    Conflict between rule 8 and token ASSIGN resolved as reduce (ASSIGN < BITWISEOR).
    Conflict between rule 8 and token MUL resolved as shift (BITWISEOR < MUL).
    Conflict between rule 8 and token DIV resolved as shift (BITWISEOR < DIV).
    Conflict between rule 8 and token EQ resolved as shift (BITWISEOR < EQ).
    Conflict between rule 8 and token GE resolved as shift (BITWISEOR < GE).
    Conflict between rule 8 and token GT resolved as shift (BITWISEOR < GT).
    Conflict between rule 8 and token LE resolved as shift (BITWISEOR < LE).
    Conflict between rule 8 and token LT resolved as shift (BITWISEOR < LT).
    Conflict between rule 8 and token MINUS resolved as shift (BITWISEOR < MINUS).
    Conflict between rule 8 and token MOD resolved as shift (BITWISEOR < MOD).
    Conflict between rule 8 and token NE resolved as shift (BITWISEOR < NE).
    Conflict between rule 8 and token OR resolved as reduce (OR < BITWISEOR).
    Conflict between rule 8 and token PLUS resolved as shift (BITWISEOR < PLUS).


state 45

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr  [$end, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR]
    9     | Expr BITWISEXOR Expr .  [$end, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, OR, RPAR]
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    PLUS        shift, and go to state 35

    $default  reduce using rule 9 (Expr)

    Conflict between rule 9 and token BITWISEAND resolved as shift (BITWISEXOR < BITWISEAND).
    Conflict between rule 9 and token BITWISEOR resolved as reduce (BITWISEOR < BITWISEXOR).
    Conflict between rule 9 and token BITWISEXOR resolved as reduce (%left BITWISEXOR).
    Conflict between rule 9 and token AND resolved as reduce (AND < BITWISEXOR).
    Conflict between rule 9 and token ASSIGN resolved as reduce (ASSIGN < BITWISEXOR).
    Conflict between rule 9 and token MUL resolved as shift (BITWISEXOR < MUL).
    Conflict between rule 9 and token DIV resolved as shift (BITWISEXOR < DIV).
    Conflict between rule 9 and token EQ resolved as shift (BITWISEXOR < EQ).
    Conflict between rule 9 and token GE resolved as shift (BITWISEXOR < GE).
    Conflict between rule 9 and token GT resolved as shift (BITWISEXOR < GT).
    Conflict between rule 9 and token LE resolved as shift (BITWISEXOR < LE).
    Conflict between rule 9 and token LT resolved as shift (BITWISEXOR < LT).
    Conflict between rule 9 and token MINUS resolved as shift (BITWISEXOR < MINUS).
    Conflict between rule 9 and token MOD resolved as shift (BITWISEXOR < MOD).
    Conflict between rule 9 and token NE resolved as shift (BITWISEXOR < NE).
    Conflict between rule 9 and token OR resolved as reduce (OR < BITWISEXOR).
    Conflict between rule 9 and token PLUS resolved as shift (BITWISEXOR < PLUS).


state 46

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr  [$end, AND, ASSIGN, COMMA, OR, RPAR]
    7     | Expr AND Expr .  [$end, AND, ASSIGN, COMMA, OR, RPAR]
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    PLUS        shift, and go to state 35

    $default  reduce using rule 7 (Expr)

    Conflict between rule 7 and token BITWISEAND resolved as shift (AND < BITWISEAND).
    Conflict between rule 7 and token BITWISEOR resolved as shift (AND < BITWISEOR).
    Conflict between rule 7 and token BITWISEXOR resolved as shift (AND < BITWISEXOR).
    Conflict between rule 7 and token AND resolved as reduce (%left AND).
    Conflict between rule 7 and token ASSIGN resolved as reduce (ASSIGN < AND).
    Conflict between rule 7 and token MUL resolved as shift (AND < MUL).
    Conflict between rule 7 and token DIV resolved as shift (AND < DIV).
    Conflict between rule 7 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 7 and token GE resolved as shift (AND < GE).
    Conflict between rule 7 and token GT resolved as shift (AND < GT).
    Conflict between rule 7 and token LE resolved as shift (AND < LE).
    Conflict between rule 7 and token LT resolved as shift (AND < LT).
    Conflict between rule 7 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 7 and token MOD resolved as shift (AND < MOD).
    Conflict between rule 7 and token NE resolved as shift (AND < NE).
    Conflict between rule 7 and token OR resolved as reduce (OR < AND).
    Conflict between rule 7 and token PLUS resolved as shift (AND < PLUS).


state 47

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr  [$end, COMMA, RPAR]
   17     | Expr ASSIGN Expr .  [$end, COMMA, RPAR]
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    AND         shift, and go to state 22
    ASSIGN      shift, and go to state 23
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    OR          shift, and go to state 34
    PLUS        shift, and go to state 35

    $default  reduce using rule 17 (Expr)

    Conflict between rule 17 and token BITWISEAND resolved as shift (ASSIGN < BITWISEAND).
    Conflict between rule 17 and token BITWISEOR resolved as shift (ASSIGN < BITWISEOR).
    Conflict between rule 17 and token BITWISEXOR resolved as shift (ASSIGN < BITWISEXOR).
    Conflict between rule 17 and token AND resolved as shift (ASSIGN < AND).
    Conflict between rule 17 and token ASSIGN resolved as shift (%right ASSIGN).
    Conflict between rule 17 and token MUL resolved as shift (ASSIGN < MUL).
    Conflict between rule 17 and token DIV resolved as shift (ASSIGN < DIV).
    Conflict between rule 17 and token EQ resolved as shift (ASSIGN < EQ).
    Conflict between rule 17 and token GE resolved as shift (ASSIGN < GE).
    Conflict between rule 17 and token GT resolved as shift (ASSIGN < GT).
    Conflict between rule 17 and token LE resolved as shift (ASSIGN < LE).
    Conflict between rule 17 and token LT resolved as shift (ASSIGN < LT).
    Conflict between rule 17 and token MINUS resolved as shift (ASSIGN < MINUS).
    Conflict between rule 17 and token MOD resolved as shift (ASSIGN < MOD).
    Conflict between rule 17 and token NE resolved as shift (ASSIGN < NE).
    Conflict between rule 17 and token OR resolved as shift (ASSIGN < OR).
    Conflict between rule 17 and token PLUS resolved as shift (ASSIGN < PLUS).


state 48

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]
   18     | Expr MUL Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    $default  reduce using rule 18 (Expr)

    Conflict between rule 18 and token BITWISEAND resolved as reduce (BITWISEAND < MUL).
    Conflict between rule 18 and token BITWISEOR resolved as reduce (BITWISEOR < MUL).
    Conflict between rule 18 and token BITWISEXOR resolved as reduce (BITWISEXOR < MUL).
    Conflict between rule 18 and token AND resolved as reduce (AND < MUL).
    Conflict between rule 18 and token ASSIGN resolved as reduce (ASSIGN < MUL).
    Conflict between rule 18 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 18 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 18 and token EQ resolved as reduce (EQ < MUL).
    Conflict between rule 18 and token GE resolved as reduce (GE < MUL).
    Conflict between rule 18 and token GT resolved as reduce (GT < MUL).
    Conflict between rule 18 and token LE resolved as reduce (LE < MUL).
    Conflict between rule 18 and token LT resolved as reduce (LT < MUL).
    Conflict between rule 18 and token MINUS resolved as reduce (MINUS < MUL).
    Conflict between rule 18 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 18 and token NE resolved as reduce (NE < MUL).
    Conflict between rule 18 and token OR resolved as reduce (OR < MUL).
    Conflict between rule 18 and token PLUS resolved as reduce (PLUS < MUL).


state 49

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]
   20     | Expr DIV Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    $default  reduce using rule 20 (Expr)

    Conflict between rule 20 and token BITWISEAND resolved as reduce (BITWISEAND < DIV).
    Conflict between rule 20 and token BITWISEOR resolved as reduce (BITWISEOR < DIV).
    Conflict between rule 20 and token BITWISEXOR resolved as reduce (BITWISEXOR < DIV).
    Conflict between rule 20 and token AND resolved as reduce (AND < DIV).
    Conflict between rule 20 and token ASSIGN resolved as reduce (ASSIGN < DIV).
    Conflict between rule 20 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 20 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 20 and token EQ resolved as reduce (EQ < DIV).
    Conflict between rule 20 and token GE resolved as reduce (GE < DIV).
    Conflict between rule 20 and token GT resolved as reduce (GT < DIV).
    Conflict between rule 20 and token LE resolved as reduce (LE < DIV).
    Conflict between rule 20 and token LT resolved as reduce (LT < DIV).
    Conflict between rule 20 and token MINUS resolved as reduce (MINUS < DIV).
    Conflict between rule 20 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 20 and token NE resolved as reduce (NE < DIV).
    Conflict between rule 20 and token OR resolved as reduce (OR < DIV).
    Conflict between rule 20 and token PLUS resolved as reduce (PLUS < DIV).


state 50

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR]
   11     | Expr EQ Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR]
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    MUL    shift, and go to state 24
    DIV    shift, and go to state 25
    GE     shift, and go to state 27
    GT     shift, and go to state 28
    LE     shift, and go to state 29
    LT     shift, and go to state 30
    MINUS  shift, and go to state 31
    MOD    shift, and go to state 32
    PLUS   shift, and go to state 35

    $default  reduce using rule 11 (Expr)

    Conflict between rule 11 and token BITWISEAND resolved as reduce (BITWISEAND < EQ).
    Conflict between rule 11 and token BITWISEOR resolved as reduce (BITWISEOR < EQ).
    Conflict between rule 11 and token BITWISEXOR resolved as reduce (BITWISEXOR < EQ).
    Conflict between rule 11 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 11 and token ASSIGN resolved as reduce (ASSIGN < EQ).
    Conflict between rule 11 and token MUL resolved as shift (EQ < MUL).
    Conflict between rule 11 and token DIV resolved as shift (EQ < DIV).
    Conflict between rule 11 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 11 and token GE resolved as shift (EQ < GE).
    Conflict between rule 11 and token GT resolved as shift (EQ < GT).
    Conflict between rule 11 and token LE resolved as shift (EQ < LE).
    Conflict between rule 11 and token LT resolved as shift (EQ < LT).
    Conflict between rule 11 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 11 and token MOD resolved as shift (EQ < MOD).
    Conflict between rule 11 and token NE resolved as reduce (%left NE).
    Conflict between rule 11 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 11 and token PLUS resolved as shift (EQ < PLUS).


state 51

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   14     | Expr GE Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    MUL    shift, and go to state 24
    DIV    shift, and go to state 25
    MINUS  shift, and go to state 31
    MOD    shift, and go to state 32
    PLUS   shift, and go to state 35

    $default  reduce using rule 14 (Expr)

    Conflict between rule 14 and token BITWISEAND resolved as reduce (BITWISEAND < GE).
    Conflict between rule 14 and token BITWISEOR resolved as reduce (BITWISEOR < GE).
    Conflict between rule 14 and token BITWISEXOR resolved as reduce (BITWISEXOR < GE).
    Conflict between rule 14 and token AND resolved as reduce (AND < GE).
    Conflict between rule 14 and token ASSIGN resolved as reduce (ASSIGN < GE).
    Conflict between rule 14 and token MUL resolved as shift (GE < MUL).
    Conflict between rule 14 and token DIV resolved as shift (GE < DIV).
    Conflict between rule 14 and token EQ resolved as reduce (EQ < GE).
    Conflict between rule 14 and token GE resolved as reduce (%left GE).
    Conflict between rule 14 and token GT resolved as reduce (%left GT).
    Conflict between rule 14 and token LE resolved as reduce (%left LE).
    Conflict between rule 14 and token LT resolved as reduce (%left LT).
    Conflict between rule 14 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 14 and token MOD resolved as shift (GE < MOD).
    Conflict between rule 14 and token NE resolved as reduce (NE < GE).
    Conflict between rule 14 and token OR resolved as reduce (OR < GE).
    Conflict between rule 14 and token PLUS resolved as shift (GE < PLUS).


state 52

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   13     | Expr GT Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    MUL    shift, and go to state 24
    DIV    shift, and go to state 25
    MINUS  shift, and go to state 31
    MOD    shift, and go to state 32
    PLUS   shift, and go to state 35

    $default  reduce using rule 13 (Expr)

    Conflict between rule 13 and token BITWISEAND resolved as reduce (BITWISEAND < GT).
    Conflict between rule 13 and token BITWISEOR resolved as reduce (BITWISEOR < GT).
    Conflict between rule 13 and token BITWISEXOR resolved as reduce (BITWISEXOR < GT).
    Conflict between rule 13 and token AND resolved as reduce (AND < GT).
    Conflict between rule 13 and token ASSIGN resolved as reduce (ASSIGN < GT).
    Conflict between rule 13 and token MUL resolved as shift (GT < MUL).
    Conflict between rule 13 and token DIV resolved as shift (GT < DIV).
    Conflict between rule 13 and token EQ resolved as reduce (EQ < GT).
    Conflict between rule 13 and token GE resolved as reduce (%left GE).
    Conflict between rule 13 and token GT resolved as reduce (%left GT).
    Conflict between rule 13 and token LE resolved as reduce (%left LE).
    Conflict between rule 13 and token LT resolved as reduce (%left LT).
    Conflict between rule 13 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 13 and token MOD resolved as shift (GT < MOD).
    Conflict between rule 13 and token NE resolved as reduce (NE < GT).
    Conflict between rule 13 and token OR resolved as reduce (OR < GT).
    Conflict between rule 13 and token PLUS resolved as shift (GT < PLUS).


state 53

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   16     | Expr LE Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    MUL    shift, and go to state 24
    DIV    shift, and go to state 25
    MINUS  shift, and go to state 31
    MOD    shift, and go to state 32
    PLUS   shift, and go to state 35

    $default  reduce using rule 16 (Expr)

    Conflict between rule 16 and token BITWISEAND resolved as reduce (BITWISEAND < LE).
    Conflict between rule 16 and token BITWISEOR resolved as reduce (BITWISEOR < LE).
    Conflict between rule 16 and token BITWISEXOR resolved as reduce (BITWISEXOR < LE).
    Conflict between rule 16 and token AND resolved as reduce (AND < LE).
    Conflict between rule 16 and token ASSIGN resolved as reduce (ASSIGN < LE).
    Conflict between rule 16 and token MUL resolved as shift (LE < MUL).
    Conflict between rule 16 and token DIV resolved as shift (LE < DIV).
    Conflict between rule 16 and token EQ resolved as reduce (EQ < LE).
    Conflict between rule 16 and token GE resolved as reduce (%left GE).
    Conflict between rule 16 and token GT resolved as reduce (%left GT).
    Conflict between rule 16 and token LE resolved as reduce (%left LE).
    Conflict between rule 16 and token LT resolved as reduce (%left LT).
    Conflict between rule 16 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 16 and token MOD resolved as shift (LE < MOD).
    Conflict between rule 16 and token NE resolved as reduce (NE < LE).
    Conflict between rule 16 and token OR resolved as reduce (OR < LE).
    Conflict between rule 16 and token PLUS resolved as shift (LE < PLUS).


state 54

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   15     | Expr LT Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, NE, OR, RPAR]
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    MUL    shift, and go to state 24
    DIV    shift, and go to state 25
    MINUS  shift, and go to state 31
    MOD    shift, and go to state 32
    PLUS   shift, and go to state 35

    $default  reduce using rule 15 (Expr)

    Conflict between rule 15 and token BITWISEAND resolved as reduce (BITWISEAND < LT).
    Conflict between rule 15 and token BITWISEOR resolved as reduce (BITWISEOR < LT).
    Conflict between rule 15 and token BITWISEXOR resolved as reduce (BITWISEXOR < LT).
    Conflict between rule 15 and token AND resolved as reduce (AND < LT).
    Conflict between rule 15 and token ASSIGN resolved as reduce (ASSIGN < LT).
    Conflict between rule 15 and token MUL resolved as shift (LT < MUL).
    Conflict between rule 15 and token DIV resolved as shift (LT < DIV).
    Conflict between rule 15 and token EQ resolved as reduce (EQ < LT).
    Conflict between rule 15 and token GE resolved as reduce (%left GE).
    Conflict between rule 15 and token GT resolved as reduce (%left GT).
    Conflict between rule 15 and token LE resolved as reduce (%left LE).
    Conflict between rule 15 and token LT resolved as reduce (%left LT).
    Conflict between rule 15 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 15 and token MOD resolved as shift (LT < MOD).
    Conflict between rule 15 and token NE resolved as reduce (NE < LT).
    Conflict between rule 15 and token OR resolved as reduce (OR < LT).
    Conflict between rule 15 and token PLUS resolved as shift (LT < PLUS).


state 55

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR]
   22     | Expr MINUS Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR]

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 32

    $default  reduce using rule 22 (Expr)

    Conflict between rule 22 and token BITWISEAND resolved as reduce (BITWISEAND < MINUS).
    Conflict between rule 22 and token BITWISEOR resolved as reduce (BITWISEOR < MINUS).
    Conflict between rule 22 and token BITWISEXOR resolved as reduce (BITWISEXOR < MINUS).
    Conflict between rule 22 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 22 and token ASSIGN resolved as reduce (ASSIGN < MINUS).
    Conflict between rule 22 and token MUL resolved as shift (MINUS < MUL).
    Conflict between rule 22 and token DIV resolved as shift (MINUS < DIV).
    Conflict between rule 22 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 22 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 22 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 22 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 22 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 22 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 22 and token MOD resolved as shift (MINUS < MOD).
    Conflict between rule 22 and token NE resolved as reduce (NE < MINUS).
    Conflict between rule 22 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 22 and token PLUS resolved as reduce (%left PLUS).


state 56

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]
   19     | Expr MOD Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, MUL, COMMA, DIV, EQ, GE, GT, LE, LT, MINUS, MOD, NE, OR, PLUS, RPAR]
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    $default  reduce using rule 19 (Expr)

    Conflict between rule 19 and token BITWISEAND resolved as reduce (BITWISEAND < MOD).
    Conflict between rule 19 and token BITWISEOR resolved as reduce (BITWISEOR < MOD).
    Conflict between rule 19 and token BITWISEXOR resolved as reduce (BITWISEXOR < MOD).
    Conflict between rule 19 and token AND resolved as reduce (AND < MOD).
    Conflict between rule 19 and token ASSIGN resolved as reduce (ASSIGN < MOD).
    Conflict between rule 19 and token MUL resolved as reduce (%left MUL).
    Conflict between rule 19 and token DIV resolved as reduce (%left DIV).
    Conflict between rule 19 and token EQ resolved as reduce (EQ < MOD).
    Conflict between rule 19 and token GE resolved as reduce (GE < MOD).
    Conflict between rule 19 and token GT resolved as reduce (GT < MOD).
    Conflict between rule 19 and token LE resolved as reduce (LE < MOD).
    Conflict between rule 19 and token LT resolved as reduce (LT < MOD).
    Conflict between rule 19 and token MINUS resolved as reduce (MINUS < MOD).
    Conflict between rule 19 and token MOD resolved as reduce (%left MOD).
    Conflict between rule 19 and token NE resolved as reduce (NE < MOD).
    Conflict between rule 19 and token OR resolved as reduce (OR < MOD).
    Conflict between rule 19 and token PLUS resolved as reduce (PLUS < MOD).


state 57

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR]
   12     | Expr NE Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, NE, OR, RPAR]
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    MUL    shift, and go to state 24
    DIV    shift, and go to state 25
    GE     shift, and go to state 27
    GT     shift, and go to state 28
    LE     shift, and go to state 29
    LT     shift, and go to state 30
    MINUS  shift, and go to state 31
    MOD    shift, and go to state 32
    PLUS   shift, and go to state 35

    $default  reduce using rule 12 (Expr)

    Conflict between rule 12 and token BITWISEAND resolved as reduce (BITWISEAND < NE).
    Conflict between rule 12 and token BITWISEOR resolved as reduce (BITWISEOR < NE).
    Conflict between rule 12 and token BITWISEXOR resolved as reduce (BITWISEXOR < NE).
    Conflict between rule 12 and token AND resolved as reduce (AND < NE).
    Conflict between rule 12 and token ASSIGN resolved as reduce (ASSIGN < NE).
    Conflict between rule 12 and token MUL resolved as shift (NE < MUL).
    Conflict between rule 12 and token DIV resolved as shift (NE < DIV).
    Conflict between rule 12 and token EQ resolved as reduce (%left EQ).
    Conflict between rule 12 and token GE resolved as shift (NE < GE).
    Conflict between rule 12 and token GT resolved as shift (NE < GT).
    Conflict between rule 12 and token LE resolved as shift (NE < LE).
    Conflict between rule 12 and token LT resolved as shift (NE < LT).
    Conflict between rule 12 and token MINUS resolved as shift (NE < MINUS).
    Conflict between rule 12 and token MOD resolved as shift (NE < MOD).
    Conflict between rule 12 and token NE resolved as reduce (%left NE).
    Conflict between rule 12 and token OR resolved as reduce (OR < NE).
    Conflict between rule 12 and token PLUS resolved as shift (NE < PLUS).


state 58

    6 Expr: Expr . OR Expr  [$end, ASSIGN, COMMA, OR, RPAR]
    6     | Expr OR Expr .  [$end, ASSIGN, COMMA, OR, RPAR]
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    AND         shift, and go to state 22
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    PLUS        shift, and go to state 35

    $default  reduce using rule 6 (Expr)

    Conflict between rule 6 and token BITWISEAND resolved as shift (OR < BITWISEAND).
    Conflict between rule 6 and token BITWISEOR resolved as shift (OR < BITWISEOR).
    Conflict between rule 6 and token BITWISEXOR resolved as shift (OR < BITWISEXOR).
    Conflict between rule 6 and token AND resolved as shift (OR < AND).
    Conflict between rule 6 and token ASSIGN resolved as reduce (ASSIGN < OR).
    Conflict between rule 6 and token MUL resolved as shift (OR < MUL).
    Conflict between rule 6 and token DIV resolved as shift (OR < DIV).
    Conflict between rule 6 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 6 and token GE resolved as shift (OR < GE).
    Conflict between rule 6 and token GT resolved as shift (OR < GT).
    Conflict between rule 6 and token LE resolved as shift (OR < LE).
    Conflict between rule 6 and token LT resolved as shift (OR < LT).
    Conflict between rule 6 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 6 and token MOD resolved as shift (OR < MOD).
    Conflict between rule 6 and token NE resolved as shift (OR < NE).
    Conflict between rule 6 and token OR resolved as reduce (%left OR).
    Conflict between rule 6 and token PLUS resolved as shift (OR < PLUS).


state 59

    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR]
   21     | Expr PLUS Expr .  [$end, BITWISEAND, BITWISEOR, BITWISEXOR, AND, ASSIGN, COMMA, EQ, GE, GT, LE, LT, MINUS, NE, OR, PLUS, RPAR]
   22     | Expr . MINUS Expr

    MUL  shift, and go to state 24
    DIV  shift, and go to state 25
    MOD  shift, and go to state 32

    $default  reduce using rule 21 (Expr)

    Conflict between rule 21 and token BITWISEAND resolved as reduce (BITWISEAND < PLUS).
    Conflict between rule 21 and token BITWISEOR resolved as reduce (BITWISEOR < PLUS).
    Conflict between rule 21 and token BITWISEXOR resolved as reduce (BITWISEXOR < PLUS).
    Conflict between rule 21 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 21 and token ASSIGN resolved as reduce (ASSIGN < PLUS).
    Conflict between rule 21 and token MUL resolved as shift (PLUS < MUL).
    Conflict between rule 21 and token DIV resolved as shift (PLUS < DIV).
    Conflict between rule 21 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 21 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 21 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 21 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 21 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 21 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 21 and token MOD resolved as shift (PLUS < MOD).
    Conflict between rule 21 and token NE resolved as reduce (NE < PLUS).
    Conflict between rule 21 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 21 and token PLUS resolved as reduce (%left PLUS).


state 60

    2 ExprList: ExprList COMMA Expr .  [COMMA, RPAR]
    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    AND         shift, and go to state 22
    ASSIGN      shift, and go to state 23
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    OR          shift, and go to state 34
    PLUS        shift, and go to state 35

    $default  reduce using rule 2 (ExprList)


state 61

   33 Expr: IDENTIFIER LPAR error RPAR .

    $default  reduce using rule 33 (Expr)


state 62

    4 ExprCall: ExprCall COMMA . Expr
    6 Expr: . Expr OR Expr
    7     | . Expr AND Expr
    8     | . Expr BITWISEOR Expr
    9     | . Expr BITWISEXOR Expr
   10     | . Expr BITWISEAND Expr
   11     | . Expr EQ Expr
   12     | . Expr NE Expr
   13     | . Expr GT Expr
   14     | . Expr GE Expr
   15     | . Expr LT Expr
   16     | . Expr LE Expr
   17     | . Expr ASSIGN Expr
   18     | . Expr MUL Expr
   19     | . Expr MOD Expr
   20     | . Expr DIV Expr
   21     | . Expr PLUS Expr
   22     | . Expr MINUS Expr
   23     | . IDENTIFIER LPAR RPAR
   24     | . MINUS Expr
   25     | . PLUS Expr
   26     | . NOT Expr
   27     | . IDENTIFIER LPAR ExprCall RPAR
   28     | . LPAR ExprList RPAR
   29     | . IDENTIFIER
   30     | . CHRLIT
   31     | . DECIMAL
   32     | . NATURAL
   33     | . IDENTIFIER LPAR error RPAR
   34     | . LPAR error RPAR

    LPAR        shift, and go to state 1
    MINUS       shift, and go to state 2
    NOT         shift, and go to state 3
    PLUS        shift, and go to state 4
    IDENTIFIER  shift, and go to state 5
    CHRLIT      shift, and go to state 6
    DECIMAL     shift, and go to state 7
    NATURAL     shift, and go to state 8

    Expr  go to state 64


state 63

   27 Expr: IDENTIFIER LPAR ExprCall RPAR .

    $default  reduce using rule 27 (Expr)


state 64

    4 ExprCall: ExprCall COMMA Expr .  [COMMA, RPAR]
    6 Expr: Expr . OR Expr
    7     | Expr . AND Expr
    8     | Expr . BITWISEOR Expr
    9     | Expr . BITWISEXOR Expr
   10     | Expr . BITWISEAND Expr
   11     | Expr . EQ Expr
   12     | Expr . NE Expr
   13     | Expr . GT Expr
   14     | Expr . GE Expr
   15     | Expr . LT Expr
   16     | Expr . LE Expr
   17     | Expr . ASSIGN Expr
   18     | Expr . MUL Expr
   19     | Expr . MOD Expr
   20     | Expr . DIV Expr
   21     | Expr . PLUS Expr
   22     | Expr . MINUS Expr

    BITWISEAND  shift, and go to state 19
    BITWISEOR   shift, and go to state 20
    BITWISEXOR  shift, and go to state 21
    AND         shift, and go to state 22
    ASSIGN      shift, and go to state 23
    MUL         shift, and go to state 24
    DIV         shift, and go to state 25
    EQ          shift, and go to state 26
    GE          shift, and go to state 27
    GT          shift, and go to state 28
    LE          shift, and go to state 29
    LT          shift, and go to state 30
    MINUS       shift, and go to state 31
    MOD         shift, and go to state 32
    NE          shift, and go to state 33
    OR          shift, and go to state 34
    PLUS        shift, and go to state 35

    $default  reduce using rule 4 (ExprCall)
